@page "/rice-timer"
@using System.Timers
@using CarbAndEggTimer.Components.Timer

<a href="/" class="back-link">
    back
</a>


<div class="timer-buttons">
    <div class="button-row">
        @if (selectedRiceType is null || selectedRiceType == RiceType.Basmati)
        {
            <div class="col-md-6">
                <button @onclick="() => { selectedRiceType = RiceType.Basmati; UpdateRiceCookingTime(); }" class="timer-button @(selectedRiceType == RiceType.Basmati ? "active" : "")">
                    <img src="@GetRiceImagePath(RiceType.Basmati)" alt="Basmati">
                    Basmati
                </button>
            </div>
        }
        @if (selectedRiceType is null || selectedRiceType == RiceType.Jasmine)
        {
            <div class="col-md-6">
                <button @onclick="() => { selectedRiceType = RiceType.Jasmine; UpdateRiceCookingTime(); }" class="timer-button @(selectedRiceType == RiceType.Jasmine ? "active" : "")">
                    <img src="@GetRiceImagePath(RiceType.Jasmine)" alt="Jasmine">
                    Jasmine
                </button>
            </div>
        }
    </div>
    <div class="button-row">
        @if (selectedRiceType is null || selectedRiceType == RiceType.Brown)
        {
            <div class="col-md-6">
                <button @onclick="() => { selectedRiceType = RiceType.Brown; UpdateRiceCookingTime(); }" class="timer-button @(selectedRiceType == RiceType.Brown ? "active" : "")">
                    <img src="@GetRiceImagePath(RiceType.Brown)" alt="Brown">
                    Brown
                </button>
            </div>
        }
        @if (selectedRiceType is null || selectedRiceType == RiceType.Sushi)
        {
            <div class="col-md-6">
                <button @onclick="() => { selectedRiceType = RiceType.Sushi; UpdateRiceCookingTime(); }" class="timer-button @(selectedRiceType == RiceType.Sushi ? "active" : "")">
                    <img src="@GetRiceImagePath(RiceType.Sushi)" alt="Sushi">
                    Sushi
                </button>
            </div>
        }
    </div>
</div>



<MyTimer RequiredCookingTime="@requiredRiceCookingTime" />

@code {
    private double requiredRiceCookingTime = 0;

    public enum RiceType
    {
        Basmati,
        Jasmine,
        Brown,
        Sushi
    }

    private RiceType? selectedRiceType = null;

    // ...

    private void UpdateRiceCookingTime()
    {
        requiredRiceCookingTime = GetCookingTimeForRice(selectedRiceType);
    }

    private double GetCookingTimeForRice(RiceType? type)
    {
        // Define cooking times for different rice types
        switch (type)
        {
            case RiceType.Basmati:
                return 15; // Basmati Rice cooking time in minutes
            case RiceType.Jasmine:
                return 18; // Jasmine Rice cooking time in minutes
            case RiceType.Brown:
                return 20; // Brown Rice cooking time in minutes
            case RiceType.Sushi:
                return 12; // Sushi Rice cooking time in minutes
            default:
                return 0;
        }
    }

    private string GetRiceImagePath(RiceType? type)
    {
        // Define image paths for different rice types
        switch (type)
        {
            case RiceType.Basmati:
                return "images/rice/basmati.png";
            case RiceType.Jasmine:
                return "images/rice/jasmine.png";
            case RiceType.Brown:
                return "images/rice/brown.png";
            case RiceType.Sushi:
                return "images/rice/sushi.png";
            default:
                return "";
        }
    }
}
